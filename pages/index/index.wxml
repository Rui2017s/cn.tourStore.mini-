<view class="title">内置样式</view>
<!-- 在app.json中引入内置样式 @import "path/to/van-weapp/dist/common/index.wxss"; -->
<view class='tip'>文字shenglue</view>
<view class="van-ellipsis">这是一段宽度限制250px的文字，后面的内容会省略</view>
<view class='tip'>最多显示两行</view>
<view class="van-multi-ellipsis--l2">这是一段最多显示两行的文字，后面的内容会省略,哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈</view>
<view class='tip'>最多显示三行</view>
<view class="van-multi-ellipsis--l3">
    这是一段最多显示三行的文字，后面的内容会省略,哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈
</view>
<view class="tip">1px边框</view>
<view class="tip">上边框</view>
<view class="border van-hairline--top"></view>
<view class="tip">下边框</view>
<view class="border van-hairline--bottom"></view>
<view class="tip">左边框</view>
<view class="border van-hairline--left"></view>
<view class="tip">右边框</view>
<view class="border van-hairline--right"></view>
<view class="tip">上下边框</view>
<view class="border van-hairline--top-bottom"></view>
<view class="tip">全边框</view>
<view class="border van-hairline--surround"></view>
<view class="title">button 按钮</view>
<view class="tip">按钮类型</view>
<van-button type="default">默认按钮</van-button>
<van-button type="primary">主要按钮</van-button>
<van-button type="warning">警告按钮</van-button>
<van-button type="danger">危险按钮</van-button>
<view class="tip">朴素按钮</view>
<van-button plain type="primary">朴素按钮</van-button>
<van-button plain type="danger">朴素按钮</van-button>
<view class="tip">禁用状态</view>
<view>通过disabled属性来禁用按钮，此时按钮不可点击</view>
<van-button disabled type="primary">禁用状态</van-button>
<van-button disabled type="danger">禁用状态</van-button>
<view class="title">加载状态</view>
<van-button loading type="primary"></van-button>
<van-button loading type="danger"></van-button>
<view class="tip">按钮形状</view>
<van-button square type="primary">方形按钮</van-button>
<van-button round type="danger">圆形按钮</van-button>
<view class="tip">按钮尺寸</view>
<view>支持large、normal、small、mini四种尺寸，默认为normal</view>
<van-button size="large">大号按钮</van-button>
<van-button size="normal">普通按钮</van-button>
<van-button size="small">小型按钮</van-button>
<van-button size="mini">迷你按钮</van-button>
<view class="tip">API</view>
<!-- <view>
参数	 说明	 类型	默认值
id	标识符	String	-
type	按钮类型，可选值为 primary warning danger	String	default
size	按钮尺寸，可选值为 normal large small mini	String	normal
plain	是否为朴素按钮	Boolean	false
disabled	是否禁用按钮	Boolean	false
loading	是否显示为加载状态	Boolean	false
block	是否为块级元素	Boolean	false
round	是否为圆形按钮	Boolean	false
square	是否为方形按钮	Boolean	false
open-type	微信开放能力，具体支持可参考 微信官方文档	String	-
app-parameter	打开 APP 时，向 APP 传递的参数	String	-
lang	指定返回用户信息的语言，zh_CN 简体中文，
zh_TW 繁体中文，en 英文	String	en
session-from	会话来源	String	-
send-message-title	会话内消息卡片标题	String	当前标题
send-message-path	会话内消息卡片点击跳转小程序路径	String	当前分享路径
send-message-img	sendMessageImg	String	截图
show-message-card	显示会话内消息卡片	String	false
</view> -->
<view class="tip">Event</view>
<!-- <view>
事件名	说明	参数
bind:click	点击按钮且按钮状态不为加载或禁用时触发	-
bind:getuserinfo	用户点击该按钮时，会返回获取到的用户信息，
从返回参数的 detail 中获取到的值同 wx.getUserInfo	-
bind:contact	客服消息回调	-
bind:getphonenumber	获取用户手机号回调	-
bind:error	当使用开放能力时，发生错误的回调	-
bind:opensetting	在打开授权设置页后回调
</view>
<view class="tip">外部样式类</view> -->
<view>类名	            说明
custom-class	根节点样式类
loading-class	加载图标样式类</view>
<view class="title">Cell 单元格</view>
<view class="tip">基础用法</view>
<view>Cell可以单独使用，也可以与CellGroup搭配使用。CellGroup可以为Cell提供上下外边框。</view>
<van-cell-group>
    <van-cell title="单元格" value="内容"></van-cell>
    <van-cell title="单元格" value="内容" label="描述信息" border="{{false}}"></van-cell>
</van-cell-group>
<view class="tip">单元格大小</view>
<view>通过size属性可以控制单元格的大小</view>
<van-cell title="单元格" value="内容" size="large"></van-cell>
<van-cell title="单元格" value="内容" size="large" label="描述信息"></van-cell>
<view class="tip">展示图标</view>
<van-cell title="单元格" icon="location-o"></van-cell>
<view class="tip">展示箭头</view>
<van-cell title="单元格" icon="location-o"></van-cell>
<view>传入is-link属性则会在右侧显示箭头，并且可以通过传入arrow-direction属性控制箭头方向</view>
<van-cell title="单元格" islink></van-cell>
<van-cell title="单元格" value="内容" is-link></van-cell>
<van-cell title="单元格" value="内容" is-link arrow-direction="down" url="../logs/logs"></van-cell>
<view class="tip">高级用法</view>
<view>如以上用法不能满足你的需求，可以使用对应的插槽来自定义显示的内容</view>
<van-cell value="内容" icon="shop-o" is-link>
    <view slot="title">
        <view class="van-cell-text">单元格</view>
        <van-tag type="danger">标签</van-tag>
    </view>
</van-cell>
<van-cell title="单元格" icon="location-o" is-link></van-cell>
<van-cell title="单元格">
    <van-icon slot="right-icon" name="search" class="van-cell__right-icon"></van-icon>
</van-cell>
<view class="tip">CellGroup API</view>
<view>参数	说明	         类型	默认值
border	是否显示外边框	Boolean	true</view>
<view class="tip">CellGroup 外部样式类</view>
<view>类名	            说明
    custom-class	根节点样式类</view>
<view class="tip">Cell API</view>
<!-- <view>
        参数	说明	类型	默认值
icon	左侧图标名称或图片链接，可选值见 Icon 组件	String	-
title	左侧标题	String | Number	-
title-width	标题宽度，须包含单位	String	-
value	右侧内容	String | Number	-
label	标题下方的描述信息	String	-
size	单元格大小，可选值为 large	String	-
border	是否显示下边框	Boolean	true
center	是否使内容垂直居中	Boolean	false
url	跳转链接	String	-
link-type	链接跳转类型，可选值为 redirectTo switchTab reLaunch	String	navigateTo
clickable	是否开启点击反馈	Boolean	false
is-link	是否展示右侧箭头并开启点击反馈	Boolean	false
required	是否显示表单必填星号	Boolean	false
arrow-direction	箭头方向，可选值为 left up down	String
</view> -->
<view class="tip">Cell Slot</view>
<!-- <view>
名称	说明
-	自定义value显示内容，如果设置了value属性则不生效
title	自定义title显示内容，如果设置了title属性则不生效
icon	自定义icon显示内容，如果设置了icon属性则不生效
right-icon	自定义右侧按钮，默认是arrow，如果设置了is-link属性则不生效
</view> -->
<view class="tip">Cell 外部样式类</view>
<!-- <view>
    类名	            说明
custom-class	根节点样式类
title-class	标题样式类
label-class	描述信息样式类
value-class	右侧内容样式类
</view> -->
<view class="title">Icon 图标</view>
<view class="tip">基础用法</view>
<view>Icon的name属性支持传入图标名称或图片链接</view>
<van-icon name="close" />
<van-icon name="https://b.yzcdn.cn/vant/icon-demo-1126.png" />
<view class="tip">显示徽标</view>
<van-icon name="chat" info="9" />
<van-icon name="chat" info="99+" />
<view class="tip">API</view>
<view>
    参数	 说明	           类型	   默认值
name	图标名称或图片链接	String	-
info	图标右上角文字提示	String | Number	-
color	图标颜色	String	inherit
size	图标大小，如 20px，2em	String	inherit
custom-style	自定义样式	String	-
class-prefix	类名前缀	String	van-icon
</view>
<view class="tip">外部样式类</view>
<view>类名	       说明
custom-class	根节点样式类</view>
<view class="title">Layout布局</view>
<view class="tip">基本用法</view>
<view>Layout组件提供了24列栅格，通过在Col上添加span属性设置列所占的宽度百分比，此外。添加offset属性可以设置列的偏移宽度，计算方式与span相同</view>
<van-row>
    <van-col span="8">span:8</van-col>
    <van-col span="8">span:8</van-col>
    <van-col span="8">span:8</van-col>
</van-row>
<van-row>
    <van-col span="4">span:4</van-col>
    <van-col span="10" offset="4">span:10,offset:4</van-col>
</van-row>
<van-row>
    <van-col offset="12" apan="12">offset:12,span:12</van-col>
</van-row>
<view class="tip">设置列元素间距</view>
<view>通过 gutter 属性可以设置列元素之间的间距，默认间距为0</view>
<van-row gutter="20">
    <van-col span="8">span:8</van-col>
    <van-col span="8">span:8</van-col>
    <van-col span="8">span:8</van-col>
</van-row>
<view class="tip">API</view>
<view>
    Row
参数	说明	类型	默认值
gutter	列元素之间的间距（单位为px）	String | Number	-
参数	说明	类型	默认值
span	列元素宽度	String | Number	-
offset	列元素偏移距离	String | Number
</view>
<view class="tip">外部样式类</view>
<view>类名	说明
custom-class	根节点样式类</view>
<view class="title">Popup</view>
<view class="tip">基础用法</view>
<view>通过position属性设置 Popup 弹出位置</view>
<van-popup show="{{show}}" bind:close="onClose" position="top" overlay="{{false}}">内容</van-popup>
<view class="tip">API</view>
<view>
    参数	说明	类型	默认值
show	是否显示弹出层	Boolean	false
z-index	z-index 层级	Number	100
overlay	是否显示背景蒙层	Boolean	true
position	可选值为 top bottom right left	String	-
duration	动画时长，单位为毫秒	Number	300
custom-style	自定义弹出层样式	String	``
overlay-style	自定义背景蒙层样式	String	``
close-on-click-overlay	点击蒙层是否关闭 Popup	Boolean	true
safe-area-inset-bottom	是否适配iPhoneX	Boolean	true
</view>
<view class="tip">Event</view>
<view>事件名	说明	参数
bind:close	蒙层关闭时触发	-
bind:click-overlay	点击蒙层时触发</view>
<view class="tip">外部样式类</view>
<view>类名	说明
custom-class	根节点样式类</view>
<view class="title">Transition 动画</view>
<view class="tip">基础用法</view>
<view>将元素包裹在 transition 组件内，在元素展示/隐藏时，会有相应的过渡动画</view>
<van-transition show="{{show}}" name="fade-down" custom-class="block">内容</van-transition>
<view class="tip">动画类型</view>
<view>transiton组件内置了多种动画，可以通过name字段指定动画类型</view>
<van-transition name="fade-up"></van-transition>
<view class="tip">API</view>
<view>
    参数	说明	类型	默认值
name	动画类型	String	fade
show	是否展示组件	Boolean	true
duration	动画时长，单位为毫秒	Number	300
custom-style	自定义样式
</view>
<view class="tip">外部样式类</view>
<view>类名	说明
custom-class	根节点样式类</view>
<view class="tip">动画类型</view>
<view>
    名称	说明
fade	淡入
fade-up	上滑淡入
fade-down	下滑淡入
fade-left	左滑淡入
fade-right	右滑淡入
slide-up	上滑进入
slide-down	下滑进入
slide-left	左滑进入
slide-right	右滑进入
</view>
<view class="title">Checkbox复选框</view>
<view class="tip">基础用法</view>
<van-checkbox value="{{checked}}" bind:change="onChange">复选框</van-checkbox>
<view class="tip">禁用状态</view>
<van-checkbox disabled value="{{checked}}" bind:change="onChange">复选框</van-checkbox>
<view class="tip">自定义颜色</view>
<van-checkbox value="{{checked}}" checked-color="#07c160" bind:change="onChange">复选框</van-checkbox>
<view class="tip">自定义图标</view>
<van-checkbox use-icon-slot value="{{checked}}" bind:change="onChange">
    自定义图标
    <image slot="icon" src="{{checked?icon.active:icon.normal}}" style="width:20px;height:20px" />
</van-checkbox>
<view class="tip">复选框组</view>
<view>
    需要与van-checkbox-group一起使用，选中值是一个数组，通过value绑定在van-checkbox-group上，数组中的项即为选中的Checkbox的name属性设置的值
</view>
<van-checkbox-group value="{{ result }}" bind:change="onChange1">
    <van-checkbox wx:for="{{ list }}" wx:key="index" name="{{ item }}">复选框 {{ item }}</van-checkbox>
</van-checkbox-group>
<view class="tip">设置最大可选数</view>
<van-checkbox-group value="{{ result }}" bind:change="onChange1" max="2">
    <van-checkbox wx:for="{{ list }}" wx:key="index" name="{{ item }}">复选框 {{ item }}</van-checkbox>
</van-checkbox-group>
<view class="tip">搭配单元格组件使用</view>
<van-checkbox-group value="{{result}}" bind:change="onChange1">
    <van-cell-group>
        <van-cell wx:for="{{list}}" wx:key="index" title="复选框{{item}}" clickable data-name="{{item}}" bind:click="toggle">
            <van-checkbox catch:tap="noop" class="checkboxes-{{item}}" name="{{item}}"></van-checkbox>
        </van-cell>
    </van-cell-group>
</van-checkbox-group>
<view class="tip">Checkbox API</view>
<view>
    参数	    说明	        类型	     默认值  
name	标识 Checkbox 名称	any	-
value	是否为选中状态	Boolean	false
disabled	是否禁用单选框	Boolean	false
label-disabled	是否禁用单选框内容点击	Boolean	false
label-position	文本位置，可选值为 left	String	right
shape	形状，可选值为 round square	String	round
use-icon-slot	是否使用 icon slot	Boolean	false
checked-color	选中状态颜色	String	#1989fa
</view>
<view class="tip">CheckboxGroup API</view>
<view>
    参数	说明	               类型	       默认值
name	在表单内提交时的标识符	String	-
value	所有选中项的 name	Array	-
disabled	是否禁用所有单选框	Boolean	false
max	设置最大可选数	Number	0（无限制）
</view>
<view class="tip">Checkbox Event</view>
<view>事件名	             说明	            回调参数
bind:change	当绑定值变化时触发的事件	当前组件的值</view>
<view class="tip">CheckboxGroup Event</view>
<view>事件名	             说明	            回调参数
bind:change	当绑定值变化时触发的事件	当前组件的值</view>
<view class="tip">Checkbox Slot</view>
<view>名称	说明	slot-scope
-	自定义文本	-
icon	自定义图标	checked: 是否为选中状态</view>
<view class="tip">Checkbox 方法</view>
<view>通过 selectComponent 可以获取到 checkbox 实例并调用实例方法</view>
<view>方法名	参数	返回值	介绍
toggle	-	-	切换选中状态</view>
<view class="title">DatetimePicker时间选择</view>
<view class="tip">选择完整时间</view>
<view>value为时间戳</view>
<van-datetime-picker type="datetime" value="{{currentDate}}" min-date="{{minDate}}" max-date="{{maxDate}}" bind:Change="onChange3"></van-datetime-picker>
<view class="tip">选择日期</view>
<van-datetime-picker type="date" value="{{currentDate}}" min-date="minDate" bind:change="onChange3"></van-datetime-picker>
<view class="tip">选择时间</view>
<van-datetime-picker type="time" value="{{currentDate}}" min-hour="{{minHour}}" maxHour="{{maxHour}}" bind:change="onChange3"></van-datetime-picker>
<view class="tip">API</view>
<view>
    参数	说明	类型	默认值
value	当前选中值	String | Number	-
type	类型，可选值为 date time year-month 
不建议动态修改	String	datetime
min-date	可选的最小时间，精确到分钟	Number	十年前
max-date	可选的最大时间，精确到分钟	Number	十年后
min-hour	可选的最小小时，针对 time 类型	Number	0
max-hour	可选的最大小时，针对 time 类型	Number	23
min-minute	可选的最小分钟，针对 time 类型	Number	0
max-minute	可选的最大分钟，针对 time 类型	Number	59
title	顶部栏标题	String	''
show-toolbar	是否显示顶部栏	Boolean	false
loading	是否显示加载状态	Boolean	false
item-height	选项高度	Number	44
confirm-button-text	确认按钮文字	String	确认
cancel-button-text	取消按钮文字	String	取消
visible-item-count	可见的选项个数	Number	5
</view>
<view class="tip">Event</view>
<view>
    事件名称	说明	回调参数
input	当值变化时触发的事件	当前 value
change	当值变化时触发的事件	组件实例
confirm	点击完成按钮时触发的事件	当前 value
cancel	点击取消按钮时触发的事件
</view>
<view class="tip">change 事件</view>
<view>在change事件中，可以获取到组件实例，对组件进行相应的更新等操作：</view>
<view>
    函数	说明
getColumnValue(index)	获取对应列中选中的值
setColumnValue(index, value)	设置对应列中选中的值
getColumnValues(index)	获取对应列中所有的备选值
setColumnValues(index, values)	设置对应列中所有的备选值
getValues()	获取所有列中被选中的值，返回一个数组
setValues(values)	values为一个数组，设置所有列中被选中的值
</view>
<view class="title">Filed 输入框</view>
<view class="tip">基础用法</view>
<van-cell-group>
    <van-field value="{{value}}" placeholder="请输入用户名" border="{{false}}" bind:change="onChange4"></van-field>
</van-cell-group>
<view class="tip">自定义类型</view>
<van-cell-group>
    <van-field value="{{username}}" required clearable label="用户名" icon="question-o" placeholder="请输入用户名" bind:click-icon="onClickIcon"></van-field>
    <van-field value="{{password}}" type="password" label="密码" placeholder="请输入密码" required border="false"></van-field>
</van-cell-group>
<view class="tip">禁用输入框</view>
<van-cell-group>
    <van-field value="输入框已被禁止" label="用户名" left-icon="contact" disabled border="{{false}}"></van-field>
</van-cell-group>
<view class="tip">错误提示</view>
<view>通过error或者error-message属性增加对应的错误提示</view>
<van-cell-group>
    <van-field value="{{username}}" label="用户名" placeholder="请输入用户" error></van-field>
    <van-field value="{{phone}}" label="手机号" placeholder="请输入手机号" error-message="手机号码格式错误" border="{{false}}"></van-field>
</van-cell-group>
<view class="tip">高度自适应</view>
<view>对于 textarea，可以通过autosize属性设置高度自适应</view>
<van-cell-group>
    <van-field value="{{message}}" label="留言" type="textarea" placeholder="请输入留言" autosize border="{{false}}"></van-field>
</van-cell-group>
<view class="tip">插入按钮</view>
<view>通过 button slot 可以在输入框尾部插入按钮</view>
<van-cell-group>
    <van-field value="{{sms}}" center clearable label="短信验证码" placeholder="请输入短信验证码" border="{{false}}" use-button-slot>
        <van-button slot="button" size="small" type="primary">发送验证码</van-button>
    </van-field>
</van-cell-group>
<view class="tip">API</view>
